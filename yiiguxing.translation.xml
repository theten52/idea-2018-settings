<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="686" />
    <option name="newTranslationDialogY" value="469" />
    <histories>
      <item value="remaining" />
      <item value="attachment" />
      <item value="num Tiny Subpages" />
      <item value="Size Classes Metric" />
      <item value="last Flush Progress" />
      <item value="Not create a new ChannelFutureListener per write operation to reduce GC pressure." />
      <item value="DEFAULT EVENT LOOP THREADS" />
      <item value="Channel Future" />
      <item value="Channel Outbound Invoker" />
      <item value="explicit" />
      <item value="expli" />
      <item value="insecure protocols" />
      <item value="insecure protocol" />
      <item value="insecure p'ro'to'ca'l" />
      <item value="insecure proto" />
      <item value="insecure" />
      <item value="insecure po'r'to'ca'l" />
      <item value="insecure porto" />
      <item value="insecu" />
      <item value="incubating future" />
      <item value="incubating fu't" />
      <item value="incubating fe'tu're" />
      <item value="incubating fe'tu" />
      <item value="incubating fe" />
      <item value="incubating" />
      <item value="incubating&#10;" />
      <item value="incuba'ting" />
      <item value="incu" />
      <item value="incl" />
      <item value="inc" />
      <item value="in" />
      <item value="Deprecated Gradle features were used in this build, making it incompatible with Gradle 7.0." />
      <item value="Can't assign requested address" />
      <item value="for collaborative development and pair programming" />
      <item value="collaborative" />
      <item value="A convenient programmer to do comments on the source code, as well as convenient programmers to make notes of the plug-in I am a plug-in about taking notes on the source code. Because the source code is a read-only file, programmers often need to look at the source code, so it is very troublesome to be unable to add comments. Therefore, I have developed a plug-in that can directly take notes on the source code. It can be saved as text in markdown format. The following is a screenshot of my plug-in. 1.Select the text and right-click mark downNote 2.You can choose to add to existing notes or create a new list of notes 3.Note Title: the title of the current note; note content: an explanation of the selected code segment 4.After clicking Add to the notes list, the notes will be added to the notewindow 5.You can add another note to the current note list 6.Create a new note list 7.Click the Save button and select the save path to generate the markdown format file of the current document title 8.After configuring the content in setting, you can double-click upload to upload to the specified GitHub repository If the document is uploaded successfully, it will be displayed 9.Click the delete note button to delete the current note list 10.The empty button will clear the current note list, but it will not be deleted 11.Click the close button to close the notewindow window MarkdownNote MarkDownNoteYYF source code and document" />
      <item value="Document structure view, headers folding, highlighting, TODOs. Code completion and navigation for links to project files. Embedding fenced code blocks for different languages. Visualizing diagrams for the DOT or PlantUML diagramming languages. Ability to use custom stylesheets for a live preview." />
      <item value="Provides the capability to edit Markdown files within the IDE and see the rendered HTML in a live preview." />
      <item value="Scenario" />
      <item value="report Untraced Leak" />
      <item value="Detect and report previous leaks." />
      <item value="Platform Dependent" />
      <item value="deprecation" />
      <item value="SAMPLING INTERVAL" />
      <item value="There is a minor performance benefit in TLR if this is a power of 2." />
      <item value="PROP SAMPLING INTERVAL" />
      <item value="PROP TARGET RECORDS" />
      <item value="Resource Leak Detector" />
      <item value="so that we don't get into trouble later in the run loop if there's memory shortage while loadinginitializing them lazily." />
      <item value="pre-load and initialize InterruptedException and Cleaner classes" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1204" />
        <entry key="ENGLISH" value="1205" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="7" />
        <entry key="FRENCH" value="3" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="ESPERANTO" value="2" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1615828277268" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200402000411101" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="20200402000411101" />
      </youdao-translate>
    </option>
  </component>
</application>