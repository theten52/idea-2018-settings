<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="1005" />
    <option name="newTranslationDialogY" value="145" />
    <option name="pinTranslationDialog" value="true" />
    <histories>
      <item value="discover From" />
      <item value="parse Ext Classpath" />
      <item value="informative Commands" />
      <item value="property for root logger level or System.out redirection need to be taken into account" />
      <item value="account" />
      <item value="is Ambiguous Static Logger Binder Path Set" />
      <item value="Properties containing info about the currently running version of Maven These override any corresponding properties set on the command line" />
      <item value="Needed to make this method package visible to make writing a unit test possible Maybe it's better to move some of those methods to separate class (SoC)." />
      <item value="Adding this back in for compatibility with the verifier that hard codes this option." />
      <item value="Parsing errors can happen during the processing of the arguments and we prefer not having to check if the logger is null and construct this so we can use an SLF4J logger everywhere." />
      <item value="Make sure the Maven home directory is an absolute path to save us from confusion with say drive-relative Windows paths." />
      <item value="get Canonical File" />
      <item value="initialize" />
      <item value="system Install" />
      <item value="acquire Method Accessor" />
      <item value="This is what the classloader for the main realm looks like when we boot from the command line:" />
      <item value="Associate parent realms with their children." />
      <item value="TODO return this to protected when the legacy wrappers can be removed." />
      <item value="Associate child realms to their parents." />
      <item value="Dependency Management Importer" />
      <item value="Activation" />
      <item value="source Dominant" />
      <item value="In the future" />
      <item value="set Default Close Operation" />
      <item value="Sisu will launch @EagerSingleton's on startup" />
      <item value="Sisu spots we want a map of tabs and wires it up for us" />
      <item value="auto-wires unresolved dependencies" />
      <item value="scans and binds @Named components" />
      <item value="Search methods that can be ordered by strategies to load a class" />
      <item value="TODO: Here we shall check hint to load non-default strategies" />
      <item value="realm Disposed" />
      <item value="Will never happen as we are just creating the world." />
      <item value="noinspection ConstantConditions" />
      <item value="dispose Realm" />
      <item value="ideally, use object identity, not equals" />
      <item value="deally, use object identity, not equals" />
      <item value="Here we shall check hint to load non-default strategies" />
      <item value="normalize Url Path" />
      <item value="We need to try and be OSGi r4 compliant in the loading of all the bundles so that we can try to load eclipse without requiring equinox." />
      <item value="We need to trya and be OSGi r4 compliant in the loading of all the bundles so that we can try to load eclipse without requiring equinox" />
      <item value="trya" />
      <item value="combine Resources" />
      <item value="get Normalized Resource" />
      <item value="A strategy is a class for defining how classes and resources are located in classworlds." />
      <item value="We delegate to the Strategy here so that we can change the behavior of any existing ClassRealm." />
      <item value="Avoid running this method on older jdks" />
      <item value="void running this method on older jdks" />
      <item value="Enumeration" />
      <item value="NOTE: This gets only called from ClassLoader.loadClass(Class, boolean) while we try to check for bootstrap stuff. Don't scan our class path yet, loadClassFromSelf() will do this later when called by the strategy." />
      <item value="load Class" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1768" />
        <entry key="ENGLISH" value="1769" />
        <entry key="IRISH" value="1" />
        <entry key="ESTONIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="GERMAN" value="7" />
        <entry key="FRENCH" value="4" />
        <entry key="FILIPINO" value="1" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="3" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="ESPERANTO" value="8" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1655520008734" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200402000411101" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="3e88577f0b42e0b4" />
        <option name="primaryLanguage" value="ESPERANTO" />
      </youdao-translate>
    </option>
  </component>
</application>