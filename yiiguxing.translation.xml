<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="686" />
    <option name="newTranslationDialogY" value="469" />
    <histories>
      <item value="Do not accept a null value for a FactoryBean that's not fully initialized yet: Many FactoryBeans just return null then." />
      <item value="Caches object obtained from FactoryBean if it is a singleton." />
      <item value="Don't let calling code try to dereference the factory if the bean isn't a factory." />
      <item value="Preferred" />
      <item value="When prompted exclude the `spring-aspects` module" />
      <item value="prompted" />
      <item value="runtime JAR files in the classpath have the version 1.2, which is older than the API version 1.3. Consider using the runtime of version 1.3," />
      <item value="You'll notice these files are already intentionally in .gitignore. The same policy goes for eclipse metadata." />
      <item value="please do not check in your own generated .iml, .ipr, or .iws files." />
      <item value="If you invoke &quot;Rebuild Project&quot; in the IDE, you'll have to generate some test resources of the `spring-oxm` module again" />
      <item value="you will likely need to set the following VM options to avoid out of memory errors: -XX:MaxPermSize=2048m -Xmx2048m -XX:MaxHeapSize=2048m" />
      <item value="Resolving this is a work in progress. If attempting to run all JUnit tests from within IntelliJ IDEA," />
      <item value="While JUnit tests pass from the command line with Gradle, some may fail when run from IntelliJ IDEA." />
      <item value="In the meantime, the 'spring-aspects' can be excluded from the project to avoid compilation errors." />
      <item value="`spring-aspects` does not compile due to references to aspect types unknown to IntelliJ IDEA." />
      <item value="(or after the import via File-&gt; Project Structure -&gt; Modules)" />
      <item value="Precompile" />
      <item value="Workspace associated with branch 'read_source_code_01' has been restored" />
      <item value="Instantiate" />
      <item value="use Config Value Editors" />
      <item value="is Synthetic" />
      <item value="&quot;(Do not request a bean from a BeanFactory in a destroy method implementation!)&quot;);" />
      <item value="&quot;Singleton bean creation not allowed while singletons of this factory are in destruction &quot; +" />
      <item value="We're assumably within a circular reference." />
      <item value="Fail if we're already creating this bean instance:" />
      <item value="Eagerly check singleton cache for manually registered singletons." />
      <item value="Xml Bean Factory" />
      <item value="Apply the java-library plugin for API and implementation separation." />
      <item value="&gt; Plugin request for plugin already on the classpath must not include a version" />
      <item value="Detect if the user has created a MultipartResolver but named it incorrectly" />
      <item value="get Match Outcome" />
      <item value="Where precedence is mentioned in methods such as addFirst and addLast, this is with regard to the order in which property sources will be searched when resolving a given property with a PropertyResolver." />
      <item value="mentioned" />
      <item value="Trigger post-initialization callback for all applicable beans... for" />
      <item value="Trigger post-initialization callback for all applicable beans..." />
      <item value="} Iterate over a copy to allow for init methods which in turn register new bean definitions. While this may not be part of the regular factory bootstrap, it does otherwise work fine." />
      <item value="Instantiate all remaining (non-lazy-init) singletons." />
      <item value="Allow for caching all bean definition metadata, not expecting further changes." />
      <item value="Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early." />
      <item value="Register a default embedded value resolver if no bean post-processor (such as a PropertyPlaceholderConfigurer bean) registered any before: at this point, primarily for resolution in annotation attribute values." />
      <item value="Initialize conversion service for this context" />
      <item value="has Embedded Value Resolver" />
      <item value="Only set parent context as parent MessageSource if no parent MessageSource registered already." />
      <item value="Initialize message source for this context. initMessageSource" />
      <item value="Register bean processors that intercept bean creation." />
      <item value="moving it to the end of the processor chain (for picking up proxies etc)." />
      <item value="Separate between BeanPostProcessors that implement PriorityOrdered," />
      <item value="through an @Bean method registered by ConfigurationClassPostProcessor)" />
      <item value="meantime" />
      <item value="Invoke factory processors registered as beans in the context." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1327" />
        <entry key="ENGLISH" value="1328" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="7" />
        <entry key="FRENCH" value="3" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="ESPERANTO" value="2" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616266058654" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200402000411101" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="ESPERANTO" />
        <option name="useTranslateGoogleCom" value="true" />
      </google-translate>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="BAIDU" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="20200402000411101" />
      </youdao-translate>
    </option>
  </component>
</application>