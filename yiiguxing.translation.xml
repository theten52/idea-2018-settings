<application>
  <component name="AppStorage">
    <histories>
      <item value="Brett Wooldridge" />
      <item value="* The javax.management MBean for a Hikari pool instance." />
      <item value="{} - using dataSourceClassName and ignoring jdbcUrl." />
      <item value="{} - cannot use driverClassName and dataSourceClassName together." />
      <item value="{} - using dataSource and ignoring dataSourceClassName." />
      <item value="quietly Close Connection" />
      <item value="Objects * that are borrowed from the bag but never &quot;requited&quot; will result * in a memory leak." />
      <item value="This method will return a borrowed object to the bag." />
      <item value="requite" />
      <item value="when connections are aborted, exceptions are often thrown that should not reach the application" />
      <item value="reach" />
      <item value="// Closing statements can cause connection eviction, so this must run before the conditional below" />
      <item value="/ Throw away the dead connection (passed max age or failed alive test)" />
      <item value="or timeout after the specified number of milliseconds." />
      <item value="// We timed out... break and throw exception" />
      <item value="Otherwise, scan the shared list ... then poll the handoff queue" />
      <item value="Cast is not needed for these" />
      <item value="// Body is replaced (injected) by JavassistProxyFactory" />
      <item value="/ Required for Class.forName().newInstance()" />
      <item value="The basic service for managing a set of JDBC drivers." />
      <item value="Wrapper class for registered Drivers in order to not expose Driver.equals() * to avoid the capture of the Driver it being compared to as it might not * normally have access." />
      <item value="Wrapper class for registered Drivers in order to not expose Driver.equals()" />
      <item value="no suitable driver" />
      <item value="If the caller does not have permission to load the driver then // skip it." />
      <item value="Walk through the loaded registeredDrivers attempting to locate someone // who understands the given URL." />
      <item value="in either of HikariConfig class loader or Thread context classloader" />
      <item value="Swallow and continue" />
      <item value="To * inject additional properties into the result you can downcast it," />
      <item value="Explicit Type" />
      <item value="prevent" />
      <item value="Authentication attempt using org.springframework.security.authentication.dao.DaoAuthenticationProvider" />
      <item value="Request is to process authentication" />
      <item value="Checking match of request : '/oauth/token'; against '/oauth/token'" />
      <item value="Returns the first filter chain matching the supplied URL." />
      <item value="Let the delegate perform the actual doFilter operation." />
      <item value="Let subclasses do whatever initialization they like." />
      <item value="specifying the name of the target bean in the Spring * application context." />
      <item value="Delegating Filter Proxy" />
      <item value="should Not Filter Async Dispatch" />
      <item value="Proceed without invoking this filter..." />
      <item value="already Filtered Attribute Name" />
      <item value="gauge Service" />
      <item value="* Filter that counts requests and measures processing times." />
      <item value="Create the filter chain for this request" />
      <item value="This // requires a recheck in second case to deal with // shutdownNow race while clearing interrupt" />
      <item value="If pool is stopping, ensure thread is interrupted;" />
      <item value="permanent" />
      <item value="is Async Started" />
      <item value="is Secure" />
      <item value="but // changing this would break backwards compatibility" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1188" />
        <entry key="ENGLISH" value="1189" />
        <entry key="ESTONIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="13" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="2" />
        <entry key="CZECH" value="3" />
        <entry key="CORSICAN" value="10" />
        <entry key="CROATIAN" value="2" />
        <entry key="LATIN" value="3" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
</application>