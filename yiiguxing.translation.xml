<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="1005" />
    <option name="newTranslationDialogY" value="145" />
    <histories>
      <item value="Re-register post-processor for detecting inner beans as ApplicationListeners, moving it to the end of the processor chain (for picking up proxies etc)." />
      <item value="Separate between BeanPostProcessors that implement PriorityOrdered, Ordered, and the rest." />
      <item value="Register BeanPostProcessorChecker that logs an info message when a bean is created during BeanPostProcessor instantiation, i.e. when a bean is not eligible for getting processed by all BeanPostProcessors." />
      <item value="Register bean processors that intercept bean creation." />
      <item value="Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime (e.g. through an @Bean method registered by ConfigurationClassPostProcessor)" />
      <item value="Clear cached merged bean definitions since the post-processors might have modified the original metadata, e.g. replacing placeholders in values..." />
      <item value="Separate between BeanFactoryPostProcessors that implement PriorityOrdered, Ordered, and the rest." />
      <item value="Now, invoke the postProcessBeanFactory callback of all processors handled so far." />
      <item value="Finally, invoke all other BeanDefinitionRegistryPostProcessors until no further ones appear." />
      <item value="deferred Import Selector Handler" />
      <item value="Detect any custom bean name generation strategy supplied through the enclosing application context" />
      <item value="Separate between BeanDefinitionRegistryPostProcessors that implement PriorityOrdered, Ordered, and the rest." />
      <item value="uninitialized to let the bean factory post-processors apply to them!" />
      <item value="We need to leave all regular beans" />
      <item value="Invoke BeanDefinitionRegistryPostProcessors first, if any." />
      <item value="(e.g. through an @Bean method registered by ConfigurationClassPostProcessor)" />
      <item value="Detect a LoadTimeWeaver and prepare for weaving, if found in the meantime" />
      <item value="Invoke factory processors registered as beans in the context." />
      <item value="Allows post-processing of the bean factory in context subclasses." />
      <item value="Configure the bean factory with context callbacks." />
      <item value="Prepare the bean factory for use in this context" />
      <item value="Prepare the bean factory for use in this context." />
      <item value="obtain Fresh Bean Factory" />
      <item value="Tell the subclass to refresh the internal bean factory." />
      <item value="Allow for the collection of early ApplicationEvents," />
      <item value="Validate that all properties marked as required are resolvable:" />
      <item value="prepare Context" />
      <item value="get Spring Factories Instances" />
      <item value="configure Ignore Bean Info" />
      <item value="add Scalar Converters" />
      <item value="get Shared Instance" />
      <item value="Create and configure the environment" />
      <item value="prepare Environment" />
      <item value="circumstances" />
      <item value="deduce Main Application Class" />
      <item value="we don't need to do so to check if current thread is owner" />
      <item value="While we must in general read state before owner," />
      <item value="While" />
      <item value="is Held Exclusively" />
      <item value="A releaseShared should be propagated to other nodes. This is set (for head node only) in doReleaseShared to ensure propagation continues, even if other operations have since intervened." />
      <item value="Use of this value here has nothing to do with the other uses of the field, but simplifies mechanics." />
      <item value="Use of this value here has nothing to do with the other uses of the field," />
      <item value="but simplifies mechanics." />
      <item value="transferred" />
      <item value="intervened" />
      <item value="do Release Shared" />
      <item value="Propagation was indicated by caller" />
      <item value="successor" />
      <item value="unpark Successor" />
      <item value="Utilities for various versions of acquire" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1549" />
        <entry key="ENGLISH" value="1550" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="7" />
        <entry key="FRENCH" value="3" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="ESPERANTO" value="2" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1629490802940" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200402000411101" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="3e88577f0b42e0b4" />
      </youdao-translate>
    </option>
  </component>
</application>