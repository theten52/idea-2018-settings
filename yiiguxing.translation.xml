<application>
  <component name="AppStorage">
    <histories>
      <item value="No archetype found in remote catalog. Defaulting to internal catalog" />
      <item value="The {@link List} that all operations are eventually delegated to." />
      <item value="Inspired by {@code LazyList} from Commons Collections." />
      <item value="allowing for elements * to be created and added to the {@link List} in a &quot;just in time&quot; fashion." />
      <item value="This is particularly * useful for data binding to {@link List Lists}," />
      <item value="Simple {@link List} wrapper class that allows for elements to be * automatically populated as they are requested." />
      <item value="Once the underlying operation has completed successfully, * the execution instance can be simply discarded." />
      <item value="* Provide a {@link BackOffExecution} that indicates the rate at which * an operation should be retried." />
      <item value="with the * listener getting invoked for matching event objects only." />
      <item value="events will be filtered accordingly," />
      <item value="When registered with a Spring * {@code ApplicationContext}," />
      <item value="As of Spring 3.0, an {@code ApplicationListener} can generically declare * the event type that it is interested in." />
      <item value="Intended * for internal use only." />
      <item value="The only way to be sure that this type is // eligible is to make a bean definition out of it and try to instantiate it." />
      <item value="This has to be a bit of a guess" />
      <item value="Make sure bean class is actually resolved at this point." />
      <item value="// Temporarily return non-post-processed object, not storing it yet.." />
      <item value="is Singleton Currently In Creation" />
      <item value="Temporarily return non-post-processed object, not storing it yet.." />
      <item value="Now we have the bean instance, which may be a normal bean or a FactoryBean." />
      <item value="// If it's a FactoryBean, we use it to create a bean instance, unless the // caller actually wants a reference to the factory." />
      <item value="Unconditional" />
      <item value="Here to config datasource for SqlSessionFactory" />
      <item value="expect Private" />
      <item value="create Partial Mock" />
      <item value="Approach" />
      <item value="test Remove Service field Type Approach" />
      <item value="execution" />
      <item value="Curator" />
      <item value="determine Datasource" />
      <item value="Master-slave Separation Plugin with mybatis" />
      <item value="// we'll check in the synchronized section again (to prevent unnecessary reinitialization)" />
      <item value="Binds the JNDI DataSource to proxy." />
      <item value="on project level (rather than compileJava one) as sonarqube respects these" />
      <item value="determine Data Source" />
      <item value="This just serves as a hint for the actual transaction subsystem;" />
      <item value="hint" />
      <item value="allowing for corresponding optimizations at runtime." />
      <item value="corresponding optimizations at runtime." />
      <item value="corresponding" />
      <item value="allowing for" />
      <item value="if the transaction is * effectively read-only" />
      <item value="effectively" />
      <item value="propagation" />
      <item value="Actually performs" />
      <item value="well Known Simple Prefixes" />
      <item value="Recursive invocation, parsing placeholders contained in the // previously resolved placeholder value." />
      <item value="Recursive invocation, parsing placeholders contained in the placeholder key." />
      <item value="ignore Unresolvable Placeholders" />
      <item value="is Assignable From" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1126" />
        <entry key="ENGLISH" value="1127" />
        <entry key="ESTONIAN" value="1" />
        <entry key="POLISH" value="1" />
        <entry key="GERMAN" value="13" />
        <entry key="RUSSIAN" value="3" />
        <entry key="FRENCH" value="2" />
        <entry key="CZECH" value="3" />
        <entry key="CORSICAN" value="10" />
        <entry key="CROATIAN" value="2" />
        <entry key="LATIN" value="3" />
        <entry key="JAPANESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="1" />
        <entry key="VIETNAMESE" value="1" />
      </map>
    </option>
  </component>
</application>