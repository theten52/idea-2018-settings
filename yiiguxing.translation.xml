<application>
  <component name="AppStorage">
    <option name="newTranslationDialogX" value="1005" />
    <option name="newTranslationDialogY" value="145" />
    <histories>
      <item value="aspects does not compile due to references to aspect types unknown to IntelliJ IDEA" />
      <item value="spring-aspects does not compile due to references to aspect types unknown to IntelliJ IDEA" />
      <item value="When prompted exclude the spring-aspects module (or after the import via File-&gt; Project Structure -&gt; Modules)" />
      <item value="Spring ObjectXML Marshalling&quot;" />
      <item value="Marshalling" />
      <item value="Configuration on demand is an incubating feature. &gt;" />
      <item value="setcwd" />
      <item value="Full details will be found in the appropriate container log file" />
      <item value="Tooling related information for the mvc namespace" />
      <item value="&quot;Transaction silently rolled back because it has been marked as rollback-only&quot;);" />
      <item value="Unexpected rollback only matters here if we're asked to fail early" />
      <item value="Participating in larger transaction" />
      <item value="(&quot;Participating in existing transaction&quot;);" />
      <item value="get Transaction Synchronization" />
      <item value="demarcation" />
      <item value="Adapt to TransactionAspectSupport's invokeWithinTransaction..." />
      <item value="The TransactionAttributeSource should be passed the target class as well as the method, which may be from an interface." />
      <item value="Work out the target class: may be {@code null}." />
      <item value="Alliance" />
      <item value="Use stack to restore old transaction TransactionInfo. Will be null if none was set." />
      <item value="Expose current TransactionStatus, preserving any existing TransactionStatus for restoration after this transaction is complete." />
      <item value="joinpoint Identification" />
      <item value="NOTE: This class must not implement Serializable because it serves as base class for AspectJ aspects (which are not allowed to implement Serializable)!" />
      <item value="serves" />
      <item value="aspect" />
      <item value="find Candidate Advisors" />
      <item value="find Eligible Advisors" />
      <item value="advisors" />
      <item value="advices" />
      <item value="when actually in proxy mode." />
      <item value="introduce an AOP framework dependency when actually in proxy mode." />
      <item value="Inner class to just introduce an AOP framework dependency when actually in proxy mode." />
      <item value="introduce" />
      <item value="surrounding" />
      <item value="Composite Component Definition" />
      <item value="Use defaults if no transaction definition given." />
      <item value="init User Transaction And Transaction Manager" />
      <item value="BeanDefinitionRegistries are called early in application startup, before BeanFactoryPostProcessors. This means that PropertyResourceConfigurers will not have been loaded and any property substitution of this class' properties will fail. To avoid this, find any PropertyResourceConfigurers defined in the context and run them on this class' bean definition. Then update the values." />
      <item value="Let concrete implementations initialize themselves." />
      <item value="Let abstract subclasses check their configuration." />
      <item value="finish Bean Factory Initialization" />
      <item value="InputStream inputStream = Resources.getResourceAsStream(resource); SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); try (SqlSession sqlSession = sqlSessionFactory.openSession()) { UserMapper mapper = sqlSession.getMapper(UserMapper.class); User user = mapper.selectUser(1); System.out.println(user); } }" />
      <item value="Public Key Retrieval is not allowed" />
      <item value="Generated Javadoc options file (useful for troubleshooting)" />
      <item value="Execution failed for task ':demo-study:javadoc'. &gt;" />
      <item value="Groovy only needs the declared dependencies (and not the result of Java compilation)" />
      <item value="immutable Values" />
      <item value="This module also builds Kotlin code and the compileKotlin task naturally depends on compileJava. We need to redefine dependencies to break task cycles." />
      <item value="When prompted exclude the spring-aspects module (or after the import via File-&gt; Project Structure -&gt; Modules)&#10;Code away" />
      <item value="Kotlin: API version 1.2 is no longer supported; please, use version 1.3 or greater." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1411" />
        <entry key="ENGLISH" value="1412" />
        <entry key="ESTONIAN" value="1" />
        <entry key="GERMAN" value="7" />
        <entry key="FRENCH" value="3" />
        <entry key="GALICIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="ESPERANTO" value="2" />
        <entry key="ITALIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616765004541" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="appId" value="20200402000411101" />
      </app-key>
    </option>
    <option name="translateDocumentation" value="true" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="3e88577f0b42e0b4" />
      </youdao-translate>
    </option>
  </component>
</application>